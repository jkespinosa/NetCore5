// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using alkemyTest.dbContext;

namespace alkemyTest.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220428035604_update_tables3")]
    partial class update_tables3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.16");

            modelBuilder.Entity("alkemyTest.Models.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("History")
                        .HasColumnType("TEXT");

                    b.Property<string>("Img")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Weight")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("alkemyTest.Models.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mobile")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("alkemyTest.Models.Gender", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Img")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("alkemyTest.Models.MovieSerie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CharacterId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GenderId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Img")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("MovieSerieId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<int>("puntaje")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("GenderId");

                    b.HasIndex("MovieSerieId");

                    b.ToTable("MovieSeries");
                });

            modelBuilder.Entity("alkemyTest.Models.MovieSerie", b =>
                {
                    b.HasOne("alkemyTest.Models.Character", null)
                        .WithMany("MovieAssociated")
                        .HasForeignKey("CharacterId");

                    b.HasOne("alkemyTest.Models.Gender", null)
                        .WithMany("MovieAssociated")
                        .HasForeignKey("GenderId");

                    b.HasOne("alkemyTest.Models.MovieSerie", null)
                        .WithMany("CharacterAssociated")
                        .HasForeignKey("MovieSerieId");
                });

            modelBuilder.Entity("alkemyTest.Models.Character", b =>
                {
                    b.Navigation("MovieAssociated");
                });

            modelBuilder.Entity("alkemyTest.Models.Gender", b =>
                {
                    b.Navigation("MovieAssociated");
                });

            modelBuilder.Entity("alkemyTest.Models.MovieSerie", b =>
                {
                    b.Navigation("CharacterAssociated");
                });
#pragma warning restore 612, 618
        }
    }
}
